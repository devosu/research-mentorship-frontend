name: Node CI

# Shield url for README.md: 
# https://img.shields.io/github/workflow/status/GoogleCloudPlatform/github-actions/node-ci?style=for-the-badge

# Run all-around linting and testing per every push and PR.
on:
  [push, pull_request, workflow_dispatch]

jobs:
  super-lint:
    name: Run Super-Linter
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: read
      # Needed for reporting GitHub Actions status checks.
      statuses: write

    steps:
      - name: Checkout code
        uses: 'actions/checkout@v4'
        with:
          # super-linter needs the full git history to get the
          # list of files that changed across commits
          fetch-depth: 0

      - name: Run super-linter
        uses: 'super-linter/super-linter@v6'
        env:
          # For reporting GitHub Actions status checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  report-codecov:
    name: Report Codecov
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: read

    env:
      NEXT_PUBLIC_PORT: ${{ vars.PORT }}
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ vars.FIREBASE_API_KEY }}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ vars.FIREBASE_AUTH_DOMAIN }}
      NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ vars.FIREBASE_STORAGE_BUCKET }}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ vars.FIREBASE_PROJECT_ID }}
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ vars.FIREBASE_MESSAGING_SENDER_ID }}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${{ vars.PRODUCTION_FIREBASE_APP_ID }}

    steps:
      - name: Checkout code
        uses: 'actions/checkout@v4'

      - name: Install pnpm
        uses: 'pnpm/action-setup@v4'
        with:
          version: '9.1.4'

      - name : Install dependencies
        run: pnpm install

      - name: Set up Node.js 22.x
        uses: 'actions/setup-node@v4'
        with:
          node-version: '22.x'
          cache: 'pnpm'

      - name: Run tests to generate coverage
        run: pnpm run test

      - name: Upload coverage to Codecov
        uses: 'codecov/codecov-action@v4'
        with:
          flags: smart-tests
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
